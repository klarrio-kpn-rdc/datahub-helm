---
# Source: datahub/templates/datahub-upgrade/datahub-upgrade-job.yml
apiVersion: batch/v1
kind: Job
metadata:
  name: datahub-datahub-upgrade-job
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "datahub"
    app.kubernetes.io/version: 0.8.32
    helm.sh/chart: "datahub-0.2.67"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      volumes:
      - name: truststore
        secret:
          defaultMode: 0444
          secretName: strimzi-cluster-cluster-ca-cert
      - name: keystore
        secret:
          defaultMode: 0444
          secretName: datahub-kafka-user
      restartPolicy: Never
      securityContext:
        {}
      initContainers:
      containers:
        - name: datahub-upgrade-job
          image: "acryldata/datahub-upgrade:v0.8.32.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-u"
            - "NoCodeDataMigration"
            - "-a"
            - "batchSize=1000"
            - "-a"
            - "batchDelayMs=100"
            - "-a"
            - "dbType=MYSQL"
          env:
            - name: ENTITY_REGISTRY_CONFIG_PATH
              value: /datahub/datahub-gms/resources/entity-registry.yml
            - name: DATAHUB_GMS_HOST
              value: datahub-datahub-gms
            - name: DATAHUB_GMS_PORT
              value: "8080"
            - name: DATAHUB_MAE_CONSUMER_HOST
              value: datahub-datahub-mae-consumer
            - name: DATAHUB_MAE_CONSUMER_PORT
              value: "9091"
            - name: EBEAN_DATASOURCE_USERNAME
              value: "stolon"
            - name: EBEAN_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "stolon"
                  key: "password"
            - name: EBEAN_DATASOURCE_HOST
              value: "stolon-proxy-service:5432"
            - name: EBEAN_DATASOURCE_URL
              value: "jdbc:postgresql://stolon-proxy-service:5432/datahub?verifyServerCertificate=false&useSSL=true&useUnicode=yes&characterEncoding=UTF-8&enabledTLSProtocols=TLSv1.2"
            - name: EBEAN_DATASOURCE_DRIVER
              value: "org.postgresql.Driver"
            - name: KAFKA_BOOTSTRAP_SERVER
              value: "strimzi-cluster-kafka-bootstrap:9092"
            - name: KAFKA_SCHEMAREGISTRY_URL
              value: "http://cp-schema-registry:8081"
            - name: ELASTICSEARCH_HOST
              value: "elasticsearch-master"
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: GRAPH_SERVICE_IMPL
              value: neo4j
            - name: NEO4J_HOST
              value: "neo4j-community:7474"
            - name: NEO4J_URI
              value: "bolt://neo4j-community"
            - name: NEO4J_USERNAME
              value: "neo4j"
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "neo4j-secrets"
                  key: "neo4j-password"
            - name: SPRING_KAFKA_PROPERTIES_KAFKASTORE_SECURITY_PROTOCOL
              value: SSL
            - name: SPRING_KAFKA_PROPERTIES_KAFKASTORE_SSL_TRUSTSTORE_LOCATION
              value: /mnt/datahub/truststore/ca.p12
            - name: SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL
              value: SSL
            - name: SPRING_KAFKA_PROPERTIES_SSL_CA_LOCATION
              value: /mnt/datahub/truststore/ca.crt
            - name: SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_LOCATION
              value: /mnt/datahub/keystore/user.p12
            - name: SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_TYPE
              value: PKCS12
            - name: SPRING_KAFKA_PROPERTIES_SSL_PROTOCOL
              value: SSL
            - name: SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_LOCATION
              value: /mnt/datahub/truststore/ca.p12
            - name: SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_TYPE
              value: PKCS12
            - name: SPRING_KAFKA_PROPERTIES_SSL_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datahub-kafka-user
                  key: user.password
            - name: SPRING_KAFKA_PROPERTIES_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strimzi-cluster-cluster-ca-cert
                  key: ca.password
            - name: SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: strimzi-cluster-cluster-ca-cert
                  key: ca.password
            - name: SPRING_KAFKA_PROPERTIES_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datahub-kafka-user
                  key: user.password
            - name: SPRING_KAFKA_PROPERTIES_KAFKASTORE_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datahub-kafka-user
                  key: user.password
          securityContext:
            {}
          volumeMounts:
            - name: truststore
              mountPath: /mnt/datahub/truststore
              readOnly: true
            - name: keystore
              mountPath: /mnt/datahub/keystore
              readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
